#!/bin/bash
set -e

echo "üöÄ D√©marrage du backend Django SAR sur Render..."

# =============================================================================
# CONFIGURATION DE L'ENVIRONNEMENT
# =============================================================================

# Utiliser les settings de production
export DJANGO_SETTINGS_MODULE=master.settings_production

# Afficher les informations de configuration
echo "üìã Configuration:"
echo "   - Settings: $DJANGO_SETTINGS_MODULE"
echo "   - Debug: ${DEBUG:-False}"
echo "   - Port: ${PORT:-8000}"

# =============================================================================
# V√âRIFICATION DES D√âPENDANCES
# =============================================================================

echo "üîç V√©rification des d√©pendances..."
python -c "import django; print(f'Django {django.get_version()}')"
python -c "import psycopg2; print('PostgreSQL support OK')"
python -c "import gunicorn; print('Gunicorn OK')"

# =============================================================================
# MIGRATIONS DE BASE DE DONN√âES
# =============================================================================

echo "üîÑ Application des migrations Django..."
python manage.py migrate --run-syncdb

# =============================================================================
# COLLECTION DES FICHIERS STATIQUES
# =============================================================================

echo "üì¶ Collection des fichiers statiques..."
python manage.py collectstatic --noinput --clear

# =============================================================================
# CONFIGURATION DES DONN√âES INITIALES
# =============================================================================

echo "üìä Configuration des donn√©es initiales..."

# Cr√©er les cat√©gories de documents par d√©faut
echo "   - Cr√©ation des cat√©gories de documents..."
python manage.py create_default_categories || echo "‚ö†Ô∏è  Erreur lors de la cr√©ation des cat√©gories"

# Importer le dataset SAR si disponible
if [ -f "data/sar_official_dataset.csv" ]; then
    echo "   - Importation du dataset SAR..."
    python manage.py import_sar_dataset --csv-file data/sar_official_dataset.csv || echo "‚ö†Ô∏è  Erreur lors de l'import du dataset"
else
    echo "   - Dataset SAR non trouv√©, cr√©ation d'un dataset minimal..."
    mkdir -p data
    echo "question,answer" > data/sar_official_dataset.csv
    echo "Qu'est-ce que la SAR ?,Soci√©t√© Africaine de Raffinage" >> data/sar_official_dataset.csv
    python manage.py import_sar_dataset --csv-file data/sar_official_dataset.csv || echo "‚ö†Ô∏è  Erreur lors de l'import du dataset minimal"
fi

# Configurer le syst√®me RAG
echo "   - Configuration du syst√®me RAG..."
python manage.py setup_rag --vectorize || echo "‚ö†Ô∏è  Erreur lors de la configuration RAG"

# =============================================================================
# CR√âATION DU SUPERUTILISATEUR
# =============================================================================

echo "üë§ V√©rification du superutilisateur..."
python manage.py shell -c "
from django.contrib.auth import get_user_model
User = get_user_model()
if not User.objects.filter(username='admin').exists():
    User.objects.create_superuser('admin', 'admin@sar.sn', 'admin123')
    print('‚úÖ Superutilisateur cr√©√©: admin/admin123')
else:
    print('‚úÖ Superutilisateur existe d√©j√†')
" || echo "‚ö†Ô∏è  Erreur lors de la cr√©ation du superutilisateur"

# =============================================================================
# V√âRIFICATION DE LA SANT√â DE L'APPLICATION
# =============================================================================

echo "üè• V√©rification de la sant√© de l'application..."
python manage.py check --deploy || echo "‚ö†Ô∏è  Avertissements de d√©ploiement d√©tect√©s"

# =============================================================================
# D√âMARRAGE DU SERVEUR
# =============================================================================

echo "‚úÖ Backend Django pr√™t!"
echo "üåê D√©marrage du serveur sur le port ${PORT:-8000}"

# D√©marrer Gunicorn avec la configuration optimis√©e pour Render
exec gunicorn master.wsgi:application \
    --bind 0.0.0.0:${PORT:-8000} \
    --workers ${WORKERS:-4} \
    --worker-class sync \
    --worker-connections 1000 \
    --max-requests 1000 \
    --max-requests-jitter 100 \
    --timeout 30 \
    --keep-alive 2 \
    --preload \
    --log-level info \
    --access-logfile - \
    --error-logfile -
