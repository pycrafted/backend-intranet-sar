# Generated by Django 5.2.6 on 2025-09-17 16:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accueil', '0006_event'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Titre du questionnaire', max_length=200, verbose_name='Titre')),
                ('description', models.TextField(blank=True, help_text='Description détaillée du questionnaire', verbose_name='Description')),
                ('type', models.CharField(choices=[('survey', 'Sondage'), ('quiz', 'Quiz'), ('evaluation', 'Évaluation'), ('feedback', "Retour d'expérience"), ('poll', 'Sondage rapide')], default='survey', help_text='Type de questionnaire', max_length=20, verbose_name='Type')),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('active', 'Actif'), ('paused', 'En pause'), ('closed', 'Fermé'), ('archived', 'Archivé')], default='draft', help_text='Statut actuel du questionnaire', max_length=20, verbose_name='Statut')),
                ('is_anonymous', models.BooleanField(default=True, help_text='Les réponses sont-elles anonymes ?', verbose_name='Anonyme')),
                ('allow_multiple_responses', models.BooleanField(default=False, help_text='Permettre plusieurs réponses par utilisateur', verbose_name='Réponses multiples')),
                ('show_results_after_submission', models.BooleanField(default=True, help_text='Afficher les résultats après soumission', verbose_name='Afficher les résultats')),
                ('target_audience_type', models.CharField(choices=[('all', 'Tous les employés'), ('department', 'Département spécifique'), ('role', 'Rôle spécifique'), ('custom', 'Audience personnalisée')], default='all', help_text="Type d'audience ciblée", max_length=20, verbose_name="Type d'audience")),
                ('target_departments', models.JSONField(blank=True, default=list, help_text='Liste des départements ciblés (si applicable)', verbose_name='Départements ciblés')),
                ('target_roles', models.JSONField(blank=True, default=list, help_text='Liste des rôles ciblés (si applicable)', verbose_name='Rôles ciblés')),
                ('start_date', models.DateTimeField(blank=True, help_text='Date et heure de début du questionnaire', null=True, verbose_name='Date de début')),
                ('end_date', models.DateTimeField(blank=True, help_text='Date et heure de fin du questionnaire', null=True, verbose_name='Date de fin')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, help_text='Utilisateur qui a créé le questionnaire', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
            ],
            options={
                'verbose_name': 'Questionnaire',
                'verbose_name_plural': 'Questionnaires',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Question posée', verbose_name='Texte de la question')),
                ('type', models.CharField(choices=[('text', 'Texte libre'), ('single_choice', 'Choix unique'), ('multiple_choice', 'Choix multiple'), ('scale', 'Échelle'), ('date', 'Date'), ('file', 'Fichier'), ('rating', 'Note')], default='single_choice', help_text='Type de question', max_length=20, verbose_name='Type')),
                ('is_required', models.BooleanField(default=True, help_text='La question est-elle obligatoire ?', verbose_name='Obligatoire')),
                ('order', models.PositiveIntegerField(default=0, help_text="Ordre d'affichage de la question", verbose_name='Ordre')),
                ('options', models.JSONField(blank=True, default=list, help_text='Options de réponse (pour choix multiple/unique)', verbose_name='Options')),
                ('scale_min', models.IntegerField(default=1, help_text="Valeur minimum de l'échelle", verbose_name='Échelle minimum')),
                ('scale_max', models.IntegerField(default=5, help_text="Valeur maximum de l'échelle", verbose_name='Échelle maximum')),
                ('scale_labels', models.JSONField(blank=True, default=dict, help_text="Labels pour les valeurs d'échelle", verbose_name="Labels d'échelle")),
                ('show_condition', models.JSONField(blank=True, default=dict, help_text='Condition pour afficher cette question', verbose_name="Condition d'affichage")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('depends_on_question', models.ForeignKey(blank=True, help_text='Question dont dépend cette question', null=True, on_delete=django.db.models.deletion.SET_NULL, to='accueil.question', verbose_name='Dépend de')),
                ('questionnaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='accueil.questionnaire', verbose_name='Questionnaire')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'ordering': ['questionnaire', 'order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='QuestionnaireResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(blank=True, help_text='Clé de session pour les réponses anonymes', max_length=100, verbose_name='Clé de session')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Adresse IP')),
                ('user_agent', models.TextField(blank=True, help_text='Navigateur utilisé', verbose_name='User Agent')),
                ('questionnaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='accueil.questionnaire', verbose_name='Questionnaire')),
                ('user', models.ForeignKey(blank=True, help_text='Utilisateur qui a répondu (null si anonyme)', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Réponse au questionnaire',
                'verbose_name_plural': 'Réponses aux questionnaires',
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='QuestionResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_data', models.JSONField(help_text='Réponse stockée en format JSON', verbose_name='Données de réponse')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_responses', to='accueil.question', verbose_name='Question')),
                ('response', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_responses', to='accueil.questionnaireresponse', verbose_name='Réponse')),
            ],
            options={
                'verbose_name': 'Réponse à la question',
                'verbose_name_plural': 'Réponses aux questions',
                'ordering': ['response', 'question__order'],
            },
        ),
        migrations.AddIndex(
            model_name='questionnaire',
            index=models.Index(fields=['status'], name='accueil_que_status_fc4928_idx'),
        ),
        migrations.AddIndex(
            model_name='questionnaire',
            index=models.Index(fields=['type'], name='accueil_que_type_eddb10_idx'),
        ),
        migrations.AddIndex(
            model_name='questionnaire',
            index=models.Index(fields=['start_date'], name='accueil_que_start_d_885c50_idx'),
        ),
        migrations.AddIndex(
            model_name='questionnaire',
            index=models.Index(fields=['end_date'], name='accueil_que_end_dat_e381f6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='question',
            unique_together={('questionnaire', 'order')},
        ),
        migrations.AddIndex(
            model_name='questionnaireresponse',
            index=models.Index(fields=['questionnaire'], name='accueil_que_questio_626670_idx'),
        ),
        migrations.AddIndex(
            model_name='questionnaireresponse',
            index=models.Index(fields=['user'], name='accueil_que_user_id_131ea1_idx'),
        ),
        migrations.AddIndex(
            model_name='questionnaireresponse',
            index=models.Index(fields=['submitted_at'], name='accueil_que_submitt_a82d70_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='questionresponse',
            unique_together={('response', 'question')},
        ),
    ]
