# Generated by Django 5.2.6 on 2025-10-07 08:43

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Idea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(help_text="Description détaillée de l'idée")),
                ('department', models.CharField(choices=[('production', 'Production'), ('maintenance', 'Maintenance'), ('quality', 'Qualité'), ('safety', 'Sécurité'), ('logistics', 'Logistique'), ('it', 'Informatique'), ('hr', 'Ressources Humaines'), ('finance', 'Finance'), ('marketing', 'Marketing'), ('other', 'Autre')], help_text="Département concerné par l'idée", max_length=20)),
                ('status', models.CharField(choices=[('submitted', 'Soumise'), ('under_review', "En cours d'examen"), ('approved', 'Approuvée'), ('rejected', 'Rejetée'), ('implemented', 'Implémentée')], default='submitted', help_text="Statut actuel de l'idée", max_length=20)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Idée',
                'verbose_name_plural': 'Idées',
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nom du plat', max_length=200)),
                ('type', models.CharField(choices=[('senegalese', 'Sénégalais'), ('european', 'Européen')], help_text='Type de cuisine', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Description du plat', null=True)),
                ('is_available', models.BooleanField(default=True, help_text='Disponibilité du plat')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Plat',
                'verbose_name_plural': 'Plats',
                'ordering': ['type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SafetyData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_incident_date_sar', models.DateTimeField(blank=True, help_text='Date du dernier accident SAR (interne)', null=True)),
                ('last_incident_date_ee', models.DateTimeField(blank=True, help_text='Date du dernier accident EE (externe)', null=True)),
                ('last_incident_type_sar', models.CharField(blank=True, help_text='Type du dernier accident SAR', max_length=100)),
                ('last_incident_type_ee', models.CharField(blank=True, help_text='Type du dernier accident EE', max_length=100)),
                ('last_incident_description_sar', models.TextField(blank=True, help_text='Description du dernier accident SAR')),
                ('last_incident_description_ee', models.TextField(blank=True, help_text='Description du dernier accident EE')),
                ('safety_score', models.PositiveIntegerField(default=0, help_text='Score de sécurité global (0-100)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Données de Sécurité',
                'verbose_name_plural': 'Données de Sécurité',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text="Titre court et descriptif de l'événement", max_length=200, verbose_name="Titre de l'événement")),
                ('description', models.TextField(blank=True, help_text="Description détaillée de l'événement", verbose_name='Description')),
                ('date', models.DateField(help_text="Date de l'événement", verbose_name='Date')),
                ('time', models.TimeField(blank=True, help_text="Heure de début de l'événement", null=True, verbose_name='Heure')),
                ('location', models.CharField(help_text="Lieu où se déroule l'événement", max_length=200, verbose_name='Lieu')),
                ('type', models.CharField(choices=[('meeting', 'Réunion'), ('training', 'Formation'), ('celebration', 'Célébration'), ('conference', 'Conférence'), ('other', 'Autre')], default='other', help_text="Catégorie de l'événement", max_length=20, verbose_name="Type d'événement")),
                ('attendees', models.PositiveIntegerField(default=0, help_text='Nombre estimé de participants', verbose_name='Nombre de participants')),
                ('is_all_day', models.BooleanField(default=False, help_text="Cochez si l'événement dure toute la journée", verbose_name='Toute la journée')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
            ],
            options={
                'verbose_name': 'Événement',
                'verbose_name_plural': 'Événements',
                'ordering': ['date', 'time'],
                'indexes': [models.Index(fields=['date'], name='accueil_eve_date_5f4c67_idx'), models.Index(fields=['type'], name='accueil_eve_type_e9bb70_idx'), models.Index(fields=['is_all_day'], name='accueil_eve_is_all__3b398f_idx')],
            },
        ),
        migrations.CreateModel(
            name='DayMenu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('monday', 'Lundi'), ('tuesday', 'Mardi'), ('wednesday', 'Mercredi'), ('thursday', 'Jeudi'), ('friday', 'Vendredi'), ('saturday', 'Samedi'), ('sunday', 'Dimanche')], help_text='Jour de la semaine', max_length=20)),
                ('date', models.DateField(help_text='Date du menu')),
                ('is_active', models.BooleanField(default=True, help_text='Menu actif ou non')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('european', models.ForeignKey(help_text='Plat européen du jour', limit_choices_to={'type': 'european'}, on_delete=django.db.models.deletion.CASCADE, related_name='european_menus', to='accueil.menuitem')),
                ('senegalese', models.ForeignKey(help_text='Plat sénégalais du jour', limit_choices_to={'type': 'senegalese'}, on_delete=django.db.models.deletion.CASCADE, related_name='senegalese_menus', to='accueil.menuitem')),
            ],
            options={
                'verbose_name': 'Menu du Jour',
                'verbose_name_plural': 'Menus des Jours',
                'ordering': ['date', 'day'],
                'unique_together': {('day', 'date')},
            },
        ),
    ]
