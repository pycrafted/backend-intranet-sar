# Generated by Django 5.2.6 on 2025-10-20 15:43

import django.contrib.postgres.indexes
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentEmbedding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(help_text='Contenu du document (question + réponse)')),
                ('embedding', models.JSONField(help_text="Vecteur d'embedding 384D généré par all-MiniLM-L6-v2")),
                ('metadata', models.JSONField(default=dict, help_text='Métadonnées du document (question, answer, source, etc.)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Document Embedding',
                'verbose_name_plural': 'Document Embeddings',
                'db_table': 'rag_documentembedding',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['created_at'], name='rag_documen_created_5a64a7_idx'), models.Index(fields=['metadata'], name='rag_documen_metadat_1428a2_idx'), django.contrib.postgres.indexes.GinIndex(fields=['metadata'], name='rag_documen_metadat_1f49f3_gin')],
            },
        ),
        migrations.CreateModel(
            name='RAGSearchLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.TextField(help_text='Requête de recherche')),
                ('method', models.CharField(choices=[('vectorial', 'Recherche Vectorielle'), ('heuristic', 'Recherche Heuristique'), ('hybrid', 'Mode Hybride')], help_text='Méthode de recherche utilisée', max_length=20)),
                ('results_count', models.PositiveIntegerField(default=0, help_text='Nombre de résultats trouvés')),
                ('response_time_ms', models.FloatField(help_text='Temps de réponse en millisecondes')),
                ('similarity_threshold', models.FloatField(default=0.7, help_text='Seuil de similarité utilisé')),
                ('success', models.BooleanField(default=True, help_text='Recherche réussie ou non')),
                ('error_message', models.TextField(blank=True, help_text="Message d'erreur si échec", null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'RAG Search Log',
                'verbose_name_plural': 'RAG Search Logs',
                'db_table': 'rag_search_log',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['created_at'], name='rag_search__created_b3a146_idx'), models.Index(fields=['method'], name='rag_search__method_ff2459_idx'), models.Index(fields=['success'], name='rag_search__success_e97c8f_idx')],
            },
        ),
    ]
